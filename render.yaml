services:
  # API Server
  - type: web
    name: api-server
    env: docker
    dockerfilePath: ../../backend/Dockerfile
    buildCommand: "/bin/sh -c 'alembic upgrade head && echo \"Starting Danswer Api Server\"'"
    envVars:
      - key: AUTH_TYPE
        fromEnvVar: AUTH_TYPE
      - key: POSTGRES_HOST
        fromEnvVar: POSTGRES_HOST
      - key: VESPA_HOST
        fromEnvVar: VESPA_HOST
    # Additional environment variables as needed

  # Background Service
  - type: worker
    name: background-service
    env: docker
    dockerfilePath: ../../backend/Dockerfile
    envVars:
      - key: AUTH_TYPE
        fromEnvVar: AUTH_TYPE
      - key: POSTGRES_HOST
        fromEnvVar: POSTGRES_HOST
      - key: VESPA_HOST
        fromEnvVar: VESPA_HOST
    # Additional environment variables as needed

  # Web Server
  - type: web
    name: web-server
    env: docker
    dockerfilePath: ../../web/Dockerfile
    envVars:
      - key: INTERNAL_URL
        value: "http://api-server:8080"
      - key: NEXT_PUBLIC_DISABLE_STREAMING
        fromEnvVar: NEXT_PUBLIC_DISABLE_STREAMING
    # Additional environment variables as needed

  # # Relational Database (Postgres)
  # - type: postgres
  #   name: relational-db
  #   version: 15.2
  #   # Use Render's managed Postgres service

  # Vespa Service
  - type: web
    name: vespa
    env: docker
    dockerfilePath: ../../vespa/Dockerfile
    # Specify any needed environment variables

  # Nginx
  - type: web
    name: nginx
    env: docker
    dockerfilePath: ../data/nginx/Dockerfile
    # Specify any needed environment variables

  # Certbot
  - type: cron
    name: certbot
    schedule: "@daily" # Adjust as needed
    env: docker
    dockerfilePath: ../data/certbot/Dockerfile

  # Model Server
  - type: web
    name: model-server
    env: docker
    dockerfilePath: ../../backend/Dockerfile.model_server
    envVars:
      - key: DOCUMENT_ENCODER_MODEL
        fromEnvVar: DOCUMENT_ENCODER_MODEL
      - key: NORMALIZE_EMBEDDINGS
        fromEnvVar: NORMALIZE_EMBEDDINGS
      - key: MIN_THREADS_ML_MODELS
        fromEnvVar: MIN_THREADS_ML_MODELS
      - key: LOG_LEVEL
        fromEnvVar: LOG_LEVEL
    # Additional environment variables as needed
